name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SHELL: /bin/bash
  SCCACHE_VERSION: "v0.4.0"

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        rust: [stable, beta]
        include:
          - os: windows-latest
            id: windows
          - os: macos-latest
            id: macos
          - os: ubuntu-latest
            id: linux
    env:
      CCACHE: sccache
      SCCACHE_CACHE_SIZE: 3G
      SCCACHE_GHA_ENABLED: "true"
      CARGO_INCREMENTAL: 0

    steps:
      - uses: actions/checkout@v3
      
      - uses: dtolnay/rust-toolchain@stable
      - name: Get LLVM version from rustc
        run: |
          echo "LLVM_VERSION=$(rustc -vV | sed -n 's|LLVM version: ||p' | cut -d. -f1)" >> $GITHUB_ENV
        shell: bash
        
      - name: Install Dependencies on Windows
        if: matrix.id == 'windows'
        env:
          MOZILLA_BUILD_LINK: https://ftp.mozilla.org/pub/mozilla/libraries/win32
          MOZILLA_BUILD_VERSION: 3.4
        run: |
          Start-BitsTransfer -Source $env:MOZILLA_BUILD_LINK/MozillaBuildSetup-$env:MOZILLA_BUILD_VERSION.exe -Destination ./MozillaBuildSetup.exe
          .\MozillaBuildSetup.exe /S | Out-Null
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop install llvm@$env:LLVM_VERSION --global
          scoop install sccache --global
          echo "C:\ProgramData\scoop\shims;C:\Users\runneradmin\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install Dependencies on OS X
        if: matrix.id == 'macos'
        run: |
          brew install python autoconf@2.13 llvm sccache yasm
      ## TODO: Remove when Homebrew Python 3.10 is supported
      ## TODO: Waiting on https://github.com/servo/rust-mozjs/issues/559
      - name: Install Python 3.9
        if: matrix.id == 'macos'
        run: |
          brew install python@3.9
          cd $(dirname $(which python3.9))
          rm -f python3 pip3
          ln -s python3.9 python3
          ln -s pip3.9 pip3

      - name: Install Dependencies on Linux
        if: matrix.id == 'linux'
        run: |
          sudo apt install autoconf2.13 clang llvm -y

      - name: Install Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Cache Cargo Cache and Git Database
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ matrix.id }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ matrix.id }}-
          
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: ${{ env.SCCACHE_VERSION }}

      - name: Build POSIX
        if: matrix.id == 'macos' || matrix.id == 'linux'
        env:
          CC: clang
          CXX: clang++
          RUSTC_WRAPPER: sccache
        run: |
          just build-release -vv
          just test-release -vv
          mv ./target/release/cli ./target/release/spiderfire
          strip ./target/release/spiderfire

      - name: Build Windows
        if: matrix.id == 'windows' && matrix.rust != 'beta'
        shell: cmd
        env:
          CARGO_HOME: ${{ github.workspace }}\..\.cargo
          MOZTOOLS_PATH: C:\mozilla-build\msys\bin;C:\mozilla-build\bin
          AUTOCONF: C:\mozilla-build\msys\local\bin\autoconf-2.13
          CC: clang-cl.exe
          CXX: clang-cl.exe
          LINKER: lld-link.exe
          NATIVE_WIN32_PYTHON: C:\mozilla-build\python\python.exe
          PYTHON3: C:\mozilla-build\python3\python3.exe
          LIBCLANG_PATH: C:\ProgramData\scoop\apps\llvm\current\lib
        run: |
          just build-release -vv
          just test-release -vv
          rename .\target\release\cli.exe spiderfire.exe

      - name: Upload Executables as Artifacts
        uses: actions/upload-artifact@v2
        if: matrix.rust == 'stable'
        with:
          name: spiderfire-${{ github.sha }}-${{ matrix.id }}
          path: target/release/spiderfire${{ matrix.id == 'windows' && '.exe' || '' }}
          if-no-files-found: error

  Lint:
    runs-on: ubuntu-latest
    env:
      CCACHE: sccache
      SCCACHE_CACHE_SIZE: 1G
      SCCACHE_GHA_ENABLED: "true"
      CARGO_INCREMENTAL: 0

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - name: Install Dependencies on Linux
        run: |
          sudo apt install autoconf2.13 clang llvm -y
  
      - name: Install Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Cargo Cache and Git Database
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-lint-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-lint-
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          version: ${{ env.SCCACHE_VERSION }}

      - name: Lint
        env:
          CC: clang
          CXX: clang++
          RUSTC_WRAPPER: sccache
        run: |
          just lint
