name: Rust Release Build

on: [workflow_dispatch]

env:
  SHELL: /bin/bash
  CARGO_TERM_COLOR: never
  SCCACHE_GHA_ENABLED: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows, macos, linux]
        arch: [x86_64]
        include:
          - os: windows
            runner: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
          - os: macos
            runner: macos-13
            arch: x86_64
            target: x86_64-apple-darwin
          - os: linux
            runner: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
    env:
      TARGET: ${{ matrix.target }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Setup Dependencies
        uses: ./.github/actions/setup
        with:
          os: ${{ matrix.os }}
          cache-id: release-${{ matrix.os }}-${{ matrix.arch }}

      - name: Build Windows
        if: matrix.os == 'windows'
        env:
          MOZ_LTO: full,cross
          CFLAGS: /clang:-flto
          CPPFLAGS: /clang:-flto
          RUSTFLAGS: -Clinker-plugin-lto -Clinker=lld-link
        run: |
          just build-release -v --locked --target $env:TARGET
          Rename-Item -Path .\target\$env:TARGET\release\cli.exe -NewName spiderfire.exe

      - name: Build MacOS
        if: matrix.os == 'macos'
        env:
          MOZ_LTO: full,cross
          CFLAGS: -flto
          CPPFLAGS: -flto
          CXXFLAGS: -flto
          RUSTFLAGS: -Clinker-plugin-lto -Clinker=${{ github.workspace }}/.github/scripts/macos-linker.sh -Clink-arg=-fuse-ld=lld
        run: |
          just build-release -v --locked --target $TARGET
          mv ./target/$TARGET/release/cli ./target/$TARGET/release/spiderfire

      - name: Build Linux
        if: matrix.os == 'linux'
        env:
          MOZ_LTO: full,cross
          CFLAGS: -flto
          CPPFLAGS: -flto
          CXXFLAGS: -flto
          RUSTFLAGS: -Clinker-plugin-lto -Clinker=clang -Clink-arg=-fuse-ld=lld
        run: |
          just build-release -v --locked --target $TARGET
          mv ./target/$TARGET/release/cli ./target/$TARGET/release/spiderfire

      - name: Upload Executables as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spiderfire-${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/spiderfire${{ matrix.os == 'windows' && '.exe' || '' }}
          if-no-files-found: error
